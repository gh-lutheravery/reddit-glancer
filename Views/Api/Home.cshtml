@model GlanceReddit.ViewModels.HomeViewModel

<h2 class="text-danger msg" onloadstart="setMargin(e)">@Model.ErrorMessage</h2>

<h2 class="text-success fade-in msg" onloadstart="setMargin(e)">@Model.SuccessMessage</h2>

<h1 class="">Explore and analyze the top submissions on Reddit. No username or password needed.</h1>

<div class="content-section" id="home-container" style="margin-top: 2rem">
    <h1 style="margin-bottom: 0">Search Reddit</h1>
    <p class="text-muted">Must already be authenticated to search, and only one search box can be used at a time.</p>
        
    @if (!Model.IsAuth)
    {
        @using (Html.BeginForm("BeginLogin", "Api", FormMethod.Post, new { @autocomplete = "off" }))
        {
            @Html.AntiForgeryToken()          
            <a onclick="this.parentNode.submit()" class="btn btn-primary" href="@Model.RedditUrl" target="_blank">Authenticate to Reddit</a>

            <div class="form-check" style="margin-bottom: 0.25rem">
                @Html.CheckBoxFor(m => m.RememberMe, new { @class = "form-check-input", @id = "flexCheckDefault"})
                <label class="form-check-label" for="flexCheckDefault">Remember me</label>
            </div>
        }
    }

    @using (Html.BeginForm("ApiRequest", "Api", FormMethod.Post, new { @autocomplete = "off" }))
    {
        @Html.AntiForgeryToken()
        <fieldset class="form-group">
            @Html.LabelFor(m => m.RedditorName, "Redditor Search")
            @Html.TextBoxFor(m => m.RedditorName, "", new { @class = "form-control home-form-control", @placeholder = "Search for a Redditor" })
            @Html.ValidationMessageFor(m => m.RedditorName, "", new { @class = "badge badge-danger" })

            @Html.LabelFor(m => m.SubredditName, "Subreddit Search")
            @Html.TextBoxFor(m => m.SubredditName, "", new { @class = "form-control home-form-control", @placeholder = "Search for a Subreddit" })
            @Html.ValidationMessageFor(m => m.SubredditName, "", new { @class = "badge badge-danger" })

            <input type="submit" name="submit" class="btn btn-primary" value="Search" />
        </fieldset>
    }

   <script>
        /*
        function isHidden(el) {
            return (el.offsetParent === null)
        }

        function removeHomeContainerMargin(e) {
            if (!isHidden(e)) {
                let homeCont = document.getElementById("home-container");
                homeCont.style.marginTop = 0
            }
        }
        */

       let msg = document.getElementsByClassName("msg");
       let tally = 0;

       for (let element of msg) {
           if (element.innerHTML !== "") {
               element.style.marginTop = "1rem";
               element.style.marginBottom = "1rem";

               if (tally == 0) { 
                   let homeCont = document.getElementById("home-container");
                   homeCont.style.marginTop = "0";
               }
           }
           tally++;
       }

       
   </script>
</div>

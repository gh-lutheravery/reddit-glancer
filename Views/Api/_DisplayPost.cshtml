@using X.PagedList.Mvc.Core;
@using X.PagedList;
@using X.PagedList.Web.Common;
@using Newtonsoft.Json;
@using BlogApplication.ViewComponents;
@using System.Text.Encodings.Web;
@model Reddit.Controllers.Post[]

@{
    if (Model.Count() != 0)
    {
        foreach (var post in Model)
        {
            <article class="media content-section">
                <div class="media-body">
                    @if (post.NSFW)
                    {
                        <div class="btn btn-danger">
                            NSFW
                        </div>
                    }
                    <div class="article-metadata">
                        <small class="text-muted">@post.Created.ToLongDateString()</small>
                    </div>

                    <h2 class="article-title">@post.Title</h2>
                    <p class="text-muted">r/@post.Subreddit</p>

                    
                    
                    @if (post.Listing.IsSelf)
                    {  
                        <p style="max-height: 68ch" class="article-content" id="jbody">
                        @(((Reddit.Controllers.SelfPost)post).SelfText)</p>
                    }

                    // some actual videos are not listed as one in API results
                    else if (post.Listing.IsVideo || 
                        ((Reddit.Controllers.LinkPost)post).URL.StartsWith("https://youtu.be/") || 
				        ((Reddit.Controllers.LinkPost)post).URL.StartsWith("https://www.youtube.com/") ||
				        ((Reddit.Controllers.LinkPost)post).URL.StartsWith("https://m.youtube.com/") ||
                        ((Reddit.Controllers.LinkPost)post).URL.StartsWith("https://v.redd.it/"))
                    {
                        @await Component.InvokeAsync(nameof(DisplayVideo),
                             new { post = post })
                    }

                    else
                    {
                        <img style="max-width:512px;max-height:450px;" src="@(((Reddit.Controllers.LinkPost)post).URL)" 
                        alt="@(((Reddit.Controllers.LinkPost)post).URL)">
                    }
                </div>
            </article>

        }
    }
}
